@inject DialogService DialogSvc
@inject NotificationService NotificationSvc
@inject HttpClient Http

<RadzenTemplateForm TItem="MenuDateRange">
    <RadzenRadioButtonList TValue="bool" @bind-Value="@DTO.NoMenuSelection" Orientation="Orientation.Horizontal">
        <Items>
            <RadzenRadioButtonListItem TValue="bool" Text="Menu date range" Value="@false" />
            <RadzenRadioButtonListItem TValue="bool" Text="Do not initialise with menus" Value="@true" />
        </Items>
    </RadzenRadioButtonList>
    <br />
    <RadzenPanel>
        <HeaderTemplate>
            <strong>Menu dates</strong>
        </HeaderTemplate>
        <ChildContent>
            <div class="row">
                <div class="col-md-2 offset-md-1 col-sm-12">
                    From:
                </div>
                <div class="col-md-9 col-sm-12">
                    <RadzenDatePicker TValue="DateTime" AllowClear="@true" DateFormat="d MMM yy" Min="@(DateTime.Today)"
                                      @bind-Value="@DTO.From" Disabled=@(DTO.NoMenuSelection) />
                </div>
            </div>
            <div class="row">
                <div class="col-md-2 offset-md-1 col-sm-12">
                    To:
                </div>
                <div class="col-md-9 col-sm-12">
                    <RadzenDatePicker TValue="DateTime" AllowClear="@true" DateFormat="d MMM yy" Min="@(DateTime.Today)"
                                      @bind-Value="@DTO.To" Disabled=@(DTO.NoMenuSelection) />
                </div>
            </div>
        </ChildContent>
    </RadzenPanel>
    <br />
    <RadzenButton ButtonType="ButtonType.Button" Icon="check" Text="Ok"
                  Click="@(async (args) => await Proceed(DTO))" />
    <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="cancel" style="display: inline-block; margin-left: 10px;" Text="Cancel"
                  Click="@((args) => DialogSvc.Close(false))" />
</RadzenTemplateForm>

@code {
    [Parameter]
    public MenuDateRange DTO { get; set; }

    private async Task Proceed(MenuDateRange dto)
    {
        if (!dto.NoMenuSelection)
        {
            var menuCount = await Http.GetFromJsonAsync<int>($"api/Menus/CountInDateRange?from={dto.From.ToString("yyyy-MM-dd")}&to={dto.To.ToString("yyyy-MM-dd")}");
            if (menuCount == 0)
            {
                NotificationSvc.Notify(
                    NotificationSeverity.Warning,
                    "No menus available",
                    "No menus exist for the selected date range",
                    3000);
                return;
            }
        }
        DialogSvc.Close(DTO);
    }
}
