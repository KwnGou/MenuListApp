@inject HttpClient Http
@inject DialogService DialogSvc
@inject NotificationService NotificationSvc
@inject NavigationManager NavMan

<RadzenTemplateForm TItem="Plate_DetailsDTO" Data="@DTO" Submit="@(async () => await Save(@DTO))">
    <div class="row">
        <div class="col-md-3 col-sm-12">
            Plate Name:
        </div>
        <div class="col-md-9 col-sm-12">
            <RadzenTextBox @bind-Value="DTO.Name" Name="Plate Name">
                @DTO.Name
            </RadzenTextBox>
        </div>
    </div>
    <div class="row formRow">
        <div class="col-md-3 col-sm-12">
            Plate Category:
        </div>
        <div class="col-md-9 col-sm-12">
            <RadzenTextBox @bind-Value="DTO.PlateCategoryName" Name="Plate Category">
                @DTO.PlateCategoryName
            </RadzenTextBox>
        </div>
    </div>
    <br/>
    <RadzenDataGrid @ref="@grid" AllowFiltering="@false" AllowSorting="@true" AllowColumnResize="@true" PageSize="10" AllowPaging="@true"
                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Simple" PagerHorizontalAlign="HorizontalAlign.Center"
                    Data="@DTO.Ingredients" TItem="Ingredient_GridDTO">
        <Columns>
            <RadzenDataGridColumn TItem="Plate_DetailsDTO" Title="Plate Ingredients" TextAlign="TextAlign.Center" Filterable="@true" Property="@(nameof(Plate_DetailsDTO.Ingredients))">
                <Template Context="dto">
                    @dto.Ingredients
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
    <br />
    <div class="row formRow">
        <div class="col-md-3 col-sm-12">
            Plate Recipe:
        </div>
        <div class="col-md-9 col-sm-12">
            <RadzenTextBox @bind-Value="DTO.Recipe" Name="Plate Recipe">
                @DTO.Recipe
            </RadzenTextBox>
        </div>
    </div>
    <div class="row justify-content-center">
        <div class="col-md-12 d-flex align-items-end justify-content-center" style="margin-top: 16px;">
            <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Save" />
            <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="cancel" style="display: inline-block; margin-left: 10px;" Text="Cancel"
                          Click="@((args) => DialogSvc.Close(false))" />
        </div>
    </div>
</RadzenTemplateForm>


@code {
    private RadzenDataGrid<Ingredient_GridDTO> grid;

    [Parameter]
    public Plate_DetailsDTO DTO { get; set; }

    [Parameter]
    public bool IsNew { get; set; }

    private async Task Save(Plate_DetailsDTO dto)
    {
        HttpResponseMessage res;

        if (IsNew)
        {
            res = await Http.PostAsJsonAsync<Plate_DetailsDTO>("api/plates", dto);
        }
        else
        {
            res = await Http.PutAsJsonAsync<Plate_DetailsDTO>($"api/plates/{dto.Id}", dto);
        }

        if (!res.IsSuccessStatusCode)
        {
            var errMsg = await res.Content.ReadAsStringAsync();
            NotificationSvc.Notify(
                NotificationSeverity.Error,
                "Saving failed",
                errMsg,
                8000);
            Console.WriteLine($"Save error: {errMsg}");
        }
        else
        {
            DialogSvc.Close(true);
            if (IsNew)
            {
                NavMan.NavigateTo("plateDetails/id");
            }
            else
            {
                NavMan.NavigateTo("plates");
                StateHasChanged();
            }
        }
    }

    
}
