@inject HttpClient Http
@inject DialogService DialogSvc
@inject NotificationService NotificationSvc
@inject NavigationManager NavMan

<div>
    <RadzenTabs TItem="Plate_EditDTO" Data="@DTO">
        <Tabs>
            <RadzenTabsItem Text="Main">
                <div class="row">
                    <div class="col-md-3 col-sm-12">
                        Plate Name:
                    </div>
                    <div class="col-md-9 col-sm-12">
                        <RadzenTextBox @bind-Value="DTO.Name" Name="Plate Name">
                            @DTO.Name
                        </RadzenTextBox>
                    </div>
                </div>
                <div class="row formRow">
                    <div class="col-md-3 col-sm-12">
                        Plate Category:
                    </div>
                    <div class="col-md-9 col-sm-12">
                        <RadzenTextBox @bind-Value="DTO.PlateCategoryName" Name="Plate Category">
                            @DTO.PlateCategoryName
                        </RadzenTextBox>
                    </div>
                </div>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Igredients">
                <RadzenDataGrid @ref="@grid" AllowFiltering="@false" AllowSorting="@true" AllowColumnResize="@true" PageSize="10" AllowPaging="@true"
                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Simple" PagerHorizontalAlign="HorizontalAlign.Center"
                                Data="@DTO.Ingredients" TItem="PlateIngredient_GridDTO">
                    <Columns>
                        <RadzenDataGridColumn TItem="Ingredient_GridDTO" Title="Ingredient" TextAlign="TextAlign.Center" Filterable="@true" Property="@(nameof(Ingredient_GridDTO.Name))" />
                        <RadzenDataGridColumn TItem="Ingredient_GridDTO" Title="Category" TextAlign="TextAlign.Center" Filterable="@true" Property="@(nameof(Ingredient_GridDTO.IngredientCategory))">
                            <Template Context="ingDto">
                                <RadzenDropDown TValue="int" Multiple="@false" Data="@ingredients" Placeholder="Select ingredient"
                                                TextProperty="@(nameof(Ingredient_GridDTO.Name))" ValueProperty="@(nameof(Ingredient_GridDTO.Id))"
                                                 />
                            </Template>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Recipe">
                <div class="row">
                    <div class="col-12">
                        <RadzenTextArea @bind-Value="DTO.Recipe" Name="Plate Recipe" Style="width:80%" Rows="8" />
                    </div>
                </div>
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
    <br />
    <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Save" />
    <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="cancel" style="display: inline-block; margin-left: 10px;" Text="Cancel"
                  Click="@((args) => DialogSvc.Close(false))" />
</div>


@code {
    private RadzenDataGrid<PlateIngredient_GridDTO> grid;
    private Ingredient_GridDTO[] ingredients;

    [Parameter]
    public Plate_EditDTO DTO { get; set; }

    [Parameter]
    public bool IsNew { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        ingredients = await Http.GetFromJsonAsync<Ingredient_GridDTO[]>("api/Ingedients");
    }

    private async Task Save(Plate_EditDTO dto)
    {
        HttpResponseMessage res;

        if (IsNew)
        {
            res = await Http.PostAsJsonAsync<Plate_EditDTO>("api/plates", dto);
        }
        else
        {
            res = await Http.PutAsJsonAsync<Plate_EditDTO>($"api/plates/{dto.Id}", dto);
        }



        if (!res.IsSuccessStatusCode)
        {
            var errMsg = await res.Content.ReadAsStringAsync();
            NotificationSvc.Notify(
                NotificationSeverity.Error,
                "Saving failed",
                errMsg,
                8000);
            Console.WriteLine($"Save error: {errMsg}");
        }
        else
        {
            DialogSvc.Close(true);
            if (IsNew)
            {
                NavMan.NavigateTo("plateDetails/id");
            }
            else
            {
                NavMan.NavigateTo("plates");
                StateHasChanged();
            }
        }
    }


}
